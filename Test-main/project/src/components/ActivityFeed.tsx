import React from 'react';
import { Heart, Gift, Plus, Target, Calendar } from 'lucide-react';
import { Activity } from '../types';

interface ActivityFeedProps {
  activities: Activity[];
}

export const ActivityFeed: React.FC<ActivityFeedProps> = ({ activities }) => {
  const getActivityIcon = (type: Activity['type']) => {
    switch (type) {
      case 'contribution_made':
        return <Heart className="w-5 h-5 text-red-500" />;
      case 'goal_reached':
        return <Target className="w-5 h-5 text-green-500" />;
      case 'wishlist_created':
        return <Plus className="w-5 h-5 text-blue-500" />;
      case 'item_added':
        return <Gift className="w-5 h-5 text-purple-500" />;
      default:
        return <Calendar className="w-5 h-5 text-neutral-500" />;
    }
  };

  const getActivityText = (activity: Activity) => {
    switch (activity.type) {
      case 'contribution_made':
        return `–ø–æ–¥–¥–µ—Ä–∂–∞–ª(–∞) "${activity.target}" –Ω–∞ ${activity.data.amount.toLocaleString()} ‚ÇΩ`;
      case 'goal_reached':
        return `–¥–æ—Å—Ç–∏–≥(–ª–∞) —Ü–µ–ª–∏ –¥–ª—è "${activity.target}"! üéâ`;
      case 'wishlist_created':
        return `—Å–æ–∑–¥–∞–ª(–∞) –Ω–æ–≤—ã–π –≤–∏—à–ª–∏—Å—Ç "${activity.target}"`;
      case 'item_added':
        return `–¥–æ–±–∞–≤–∏–ª(–∞) –Ω–æ–≤–æ–µ –∂–µ–ª–∞–Ω–∏–µ "${activity.target}"`;
      default:
        return '–≤—ã–ø–æ–ª–Ω–∏–ª(–∞) –¥–µ–π—Å—Ç–≤–∏–µ';
    }
  };

  const formatTime = (timestamp: string) => {
    const date = new Date(timestamp);
    const now = new Date();
    const diffMs = now.getTime() - date.getTime();
    const diffHours = Math.floor(diffMs / (1000 * 60 * 60));
    const diffDays = Math.floor(diffHours / 24);

    if (diffHours < 1) return '—Ç–æ–ª—å–∫–æ —á—Ç–æ';
    if (diffHours < 24) return `${diffHours}—á –Ω–∞–∑–∞–¥`;
    if (diffDays < 7) return `${diffDays}–¥ –Ω–∞–∑–∞–¥`;
    return date.toLocaleDateString('ru-RU');
  };

  return (
    <div className="bg-white rounded-xl shadow-md overflow-hidden">
      <div className="p-4 border-b border-neutral-200">
        <h3 className="text-lg font-semibold text-neutral-900">–õ–µ–Ω—Ç–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏</h3>
      </div>
      
      <div className="divide-y divide-neutral-100">
        {activities.map((activity) => (
          <div key={activity.id} className="p-4 hover:bg-neutral-50 transition-colors">
            <div className="flex items-start space-x-3">
              <img
                src={activity.user.avatar}
                alt={activity.user.name}
                className="w-10 h-10 rounded-full object-cover flex-shrink-0"
              />
              
              <div className="flex-1 min-w-0">
                <div className="flex items-center space-x-2 mb-1">
                  <span className="font-medium text-neutral-900">
                    {activity.user.name}
                  </span>
                  <span className="text-neutral-600 text-sm">
                    {getActivityText(activity)}
                  </span>
                </div>
                
                <div className="flex items-center space-x-2 text-xs text-neutral-500">
                  <span>{formatTime(activity.timestamp)}</span>
                </div>
              </div>
              
              <div className="flex-shrink-0">
                {getActivityIcon(activity.type)}
              </div>
            </div>
          </div>
        ))}
      </div>
      
      <div className="p-4 text-center border-t border-neutral-200">
        <button className="text-primary hover:text-accent transition-colors text-sm font-medium">
          –ü–æ–∫–∞–∑–∞—Ç—å –±–æ–ª—å—à–µ
        </button>
      </div>
    </div>
  );
};