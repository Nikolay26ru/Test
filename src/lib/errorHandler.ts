// –¶–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫
export class ErrorHandler {
  private static toastContainer: HTMLElement | null = null;

  static init() {
    // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    if (!this.toastContainer) {
      this.toastContainer = document.createElement('div');
      this.toastContainer.id = 'toast-container';
      this.toastContainer.className = 'fixed top-4 right-4 z-50 space-y-2';
      document.body.appendChild(this.toastContainer);
    }
  }

  static handleSupabaseError(error: any, context: string = ''): string {
    console.error(`üî¥ –û—à–∏–±–∫–∞ Supabase –≤ ${context}:`, error);
    
    // –°–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –æ—à–∏–±–∫–∏ Supabase
    const errorMappings: Record<string, string> = {
      'PGRST116': '–ó–∞–ø–∏—Å—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞',
      '23505': '–¢–∞–∫–∞—è –∑–∞–ø–∏—Å—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç',
      '23503': '–ù–∞—Ä—É—à–µ–Ω–∏–µ —Å–≤—è–∑–∏ –¥–∞–Ω–Ω—ã—Ö',
      '42501': '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞',
      '23514': '–ù–∞—Ä—É—à–µ–Ω–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö',
      '08006': '–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö',
      '53300': '–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö'
    };

    if (error?.code && errorMappings[error.code]) {
      return errorMappings[error.code];
    }
    
    // –û—à–∏–±–∫–∏ —Å–µ—Ç–∏
    if (error?.message?.includes('Failed to fetch')) {
      return '–ü—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ —Å–µ—Ä–≤–µ—Ä—É';
    }
    
    if (error?.message?.includes('timeout')) {
      return '–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è';
    }

    if (error?.message?.includes('NetworkError')) {
      return '–û—à–∏–±–∫–∞ —Å–µ—Ç–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É';
    }
    
    // –û–±—â–∏–µ –æ—à–∏–±–∫–∏
    if (error?.message) {
      return error.message;
    }
    
    return '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞';
  }
  
  static handleAuthError(error: any): string {
    console.error('üî¥ –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', error);
    
    const authErrorMappings: Record<string, string> = {
      'invalid_credentials': '–ù–µ–≤–µ—Ä–Ω—ã–π email –∏–ª–∏ –ø–∞—Ä–æ–ª—å',
      'email_not_confirmed': '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ email –¥–ª—è –≤—Ö–æ–¥–∞',
      'user_already_exists': '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º email —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç',
      'weak_password': '–ü–∞—Ä–æ–ª—å —Å–ª–∏—à–∫–æ–º —Å–ª–∞–±—ã–π',
      'signup_disabled': '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω–∞',
      'email_address_invalid': '–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç email –∞–¥—Ä–µ—Å–∞',
      'password_too_short': '–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 6 —Å–∏–º–≤–æ–ª–æ–≤',
      'anonymous_provider_disabled': '–ê–Ω–æ–Ω–∏–º–Ω—ã–π –≤—Ö–æ–¥ –æ—Ç–∫–ª—é—á–µ–Ω'
    };

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–¥ –æ—à–∏–±–∫–∏
    if (error?.error_code && authErrorMappings[error.error_code]) {
      return authErrorMappings[error.error_code];
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—à–∏–±–∫–∏
    const message = error?.message?.toLowerCase() || '';
    
    if (message.includes('invalid login credentials')) {
      return '–ù–µ–≤–µ—Ä–Ω—ã–π email –∏–ª–∏ –ø–∞—Ä–æ–ª—å';
    }
    
    if (message.includes('email not confirmed')) {
      return '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ email –¥–ª—è –≤—Ö–æ–¥–∞';
    }
    
    if (message.includes('user already registered')) {
      return '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º email —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç';
    }

    if (message.includes('anonymous sign-ins are disabled')) {
      return '–ì–æ—Å—Ç–µ–≤–æ–π –≤—Ö–æ–¥ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω';
    }

    if (message.includes('email address is invalid')) {
      return '–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç email –∞–¥—Ä–µ—Å–∞';
    }
    
    return this.handleSupabaseError(error, '–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è');
  }
  
  static handleNetworkError(error: any): string {
    console.error('üî¥ –û—à–∏–±–∫–∞ —Å–µ—Ç–∏:', error);
    
    if (!navigator.onLine) {
      return '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É';
    }
    
    if (error?.code === 'NETWORK_ERROR') {
      return '–û—à–∏–±–∫–∞ —Å–µ—Ç–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ';
    }

    if (error?.code === 'TIMEOUT') {
      return '–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞';
    }
    
    return '–û—à–∏–±–∫–∞ —Å–µ—Ç–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ';
  }

  static handleValidationError(errors: Record<string, string>): string {
    const errorMessages = Object.values(errors);
    return errorMessages.length > 0 ? errorMessages[0] : '–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö';
  }
  
  static showToast(message: string, type: 'success' | 'error' | 'info' | 'warning' = 'error', duration: number = 5000) {
    this.init();
    
    if (!this.toastContainer) return;

    // –°–æ–∑–¥–∞–µ–º toast —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    const toast = document.createElement('div');
    const toastId = `toast-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;
    toast.id = toastId;
    
    const typeStyles = {
      success: 'bg-green-600 text-white border-green-700',
      error: 'bg-red-600 text-white border-red-700',
      warning: 'bg-orange-600 text-white border-orange-700',
      info: 'bg-blue-600 text-white border-blue-700'
    };

    const typeIcons = {
      success: '‚úÖ',
      error: '‚ùå',
      warning: '‚ö†Ô∏è',
      info: '‚ÑπÔ∏è'
    };
    
    toast.className = `px-4 py-3 rounded-lg shadow-lg border-l-4 max-w-md transform transition-all duration-300 ease-in-out ${typeStyles[type]}`;
    toast.innerHTML = `
      <div class="flex items-start space-x-3">
        <span class="text-lg">${typeIcons[type]}</span>
        <div class="flex-1">
          <p class="text-sm font-medium">${message}</p>
        </div>
        <button onclick="document.getElementById('${toastId}').remove()" class="text-white hover:text-gray-200 transition-colors">
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
          </svg>
        </button>
      </div>
    `;
    
    // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
    toast.style.transform = 'translateX(100%)';
    toast.style.opacity = '0';
    
    this.toastContainer.appendChild(toast);
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
    requestAnimationFrame(() => {
      toast.style.transform = 'translateX(0)';
      toast.style.opacity = '1';
    });
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ
    setTimeout(() => {
      if (toast.parentNode) {
        toast.style.transform = 'translateX(100%)';
        toast.style.opacity = '0';
        setTimeout(() => {
          if (toast.parentNode) {
            toast.parentNode.removeChild(toast);
          }
        }, 300);
      }
    }, duration);

    // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
    console.log(`üì¢ Toast [${type.toUpperCase()}]: ${message}`);
  }

  static logError(error: any, context: string, additionalData?: any) {
    const errorLog = {
      timestamp: new Date().toISOString(),
      context,
      error: {
        message: error?.message,
        code: error?.code,
        stack: error?.stack
      },
      additionalData,
      userAgent: navigator.userAgent,
      url: window.location.href
    };

    console.error('üî¥ –ü–æ–¥—Ä–æ–±–Ω–∞—è –æ—à–∏–±–∫–∞:', errorLog);

    // –í –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ –∑–¥–µ—Å—å –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –ª–æ–≥–∏ –≤ —Å–∏—Å—Ç–µ–º—É –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
    if (process.env.NODE_ENV === 'production') {
      // –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ —Å–∏—Å—Ç–µ–º—É –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
      this.sendErrorToMonitoring(errorLog);
    }
  }

  private static async sendErrorToMonitoring(errorLog: any) {
    try {
      // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å —Å —Å–∏—Å—Ç–µ–º–∞–º–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Ç–∏–ø–∞ Sentry, LogRocket –∏ —Ç.–¥.
      console.log('üìä –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—à–∏–±–∫–∏ –≤ —Å–∏—Å—Ç–µ–º—É –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞:', errorLog);
    } catch (monitoringError) {
      console.error('üî¥ –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥:', monitoringError);
    }
  }

  static createErrorBoundary(component: string) {
    return (error: Error, errorInfo: any) => {
      this.logError(error, `React Error Boundary: ${component}`, errorInfo);
      this.showToast(`–û—à–∏–±–∫–∞ –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–µ ${component}. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É.`, 'error');
    };
  }
}

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –æ—à–∏–±–æ–∫
window.addEventListener('unhandledrejection', (event) => {
  ErrorHandler.logError(event.reason, '–ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ Promise');
  ErrorHandler.showToast('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞', 'error');
  event.preventDefault(); // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –≤—ã–≤–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª—å
});

window.addEventListener('error', (event) => {
  ErrorHandler.logError(event.error, '–ì–ª–æ–±–∞–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞ JavaScript', {
    filename: event.filename,
    lineno: event.lineno,
    colno: event.colno
  });
  ErrorHandler.showToast('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è', 'error');
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫ —Å–µ—Ç–∏
window.addEventListener('offline', () => {
  ErrorHandler.showToast('–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É –ø–æ—Ç–µ—Ä—è–Ω–æ', 'warning');
});

window.addEventListener('online', () => {
  ErrorHandler.showToast('–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ', 'success');
});